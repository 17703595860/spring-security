<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">

    <!-- 放行 -->
    <security:http pattern="/css/**" security="none"></security:http>
    <security:http pattern="/img/**" security="none"></security:http>
    <security:http pattern="/plugins/**" security="none"></security:http>
    <security:http pattern="/failer.jsp" security="none"></security:http>
    <security:http pattern="/favicon.ico" security="none"></security:http>

    <!-- 拦截所有资源 -->
    <security:http auto-config="true" use-expressions="true">
        <!-- 放行/login.jsp，但是会经过后面的执行器链 -->
        <security:intercept-url pattern="/login.jsp" access="permitAll()"/>

        <security:intercept-url pattern="/**" access="hasAnyRole('ROLE_ADMIN')"/>

        <security:form-login login-page="/login.jsp" login-processing-url="/login"
                             authentication-failure-url="/failer.jsp"
                                default-target-url="/index.jsp"/>
        <security:logout logout-url="/logout" logout-success-url="/login.jsp"/>

        <security:remember-me token-validity-seconds="60"
                            data-source-ref="dataSource"/>

<!--        <security:access-denied-handler error-page="/403.jsp"></security:access-denied-handler>-->

    </security:http>

    <!-- 密码加密 -->
    <bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"></bean>

    <!-- 在内存中模拟用户 -->
    <security:authentication-manager>
        <security:authentication-provider user-service-ref="userService">
            <security:password-encoder ref="passwordEncoder"></security:password-encoder>
        </security:authentication-provider>
    </security:authentication-manager>

</beans>